# DO NOT MODIFY THIS AUTOGENERATED FILE
# Change it in m4 folder
ARG ALPINE_VERSION=3.16
ARG PHP_VERSION=8.3
########
# base #
########
FROM php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION} as php-fpm
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    cmake \
    file \
    g++ \
    gcc \
    libc-dev \
    pcre-dev \
    make \
    git \
    pkgconf \
    re2c \
    # for GD
    freetype-dev \
    libpng-dev  \
    libjpeg-turbo-dev \
    # for xslt
    libxslt-dev \
    # for intl extension
    icu-dev \
    openssl-dev \
    linux-headers
RUN apk add --no-cache --virtual .persistent-deps \
    # for intl extension
    icu-libs \
    # for mongodb
    libssl1.1 \
    # for postgres
    postgresql-dev \
    # for soap
    libxml2-dev \
    # for amqp
    libressl-dev \
    # for GD
    freetype \
    libpng \
    libjpeg-turbo \
    libxslt \
    # for mbstring
    oniguruma-dev \
    libgcrypt
RUN set -xe \
    # workaround for rabbitmq linking issue
    && ln -s /usr/lib /usr/local/lib64 \
    # hack to link libgcrypt
    && ln -s /usr/lib/libgcrypt.so.20 /usr/lib/libgcrypt.so \
    && ln -s /usr/lib/libgpg-error.so.0 /usr/lib/libgpg-error.so \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    # 7.4 changes https://github.com/php/php-src/blob/PHP-7.4/UPGRADING
    && docker-php-ext-configure gd \
        --enable-gd \
        --with-freetype=/usr/include/ \
        --with-jpeg=/usr/include/ \
    && docker-php-ext-configure bcmath --enable-bcmath \
    && docker-php-ext-configure intl --enable-intl \
    && docker-php-ext-configure pcntl --enable-pcntl \
    && docker-php-ext-configure mysqli --with-mysqli \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \
    && docker-php-ext-configure pdo_pgsql --with-pdo-pgsql \
    && docker-php-ext-configure mbstring --enable-mbstring \
    && docker-php-ext-configure soap --enable-soap \
    && docker-php-ext-install -j$(nproc) \
        gd \
        bcmath \
        intl \
        pcntl \
        mysqli \
        pdo_mysql \
        pdo_pgsql \
        mbstring \
        soap \
        xsl
# Copy configuration
COPY config/php7.ini /usr/local/etc/php/conf.d/
RUN set -xe \
    && pecl install mongodb
COPY config/mongodb.ini /usr/local/etc/php/conf.d/
ENV PHP_REDIS_VERSION 5.3.7
RUN git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \
        && cd /tmp/phpredis \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test
# Copy configuration
COPY config/redis.ini /usr/local/etc/php/conf.d/
# See https://github.com/protocolbuffers/protobuf/tree/main/php
RUN pecl install protobuf
# Copy configuration
COPY config/protobuf.ini /usr/local/etc/php/conf.d/
RUN set -xe \
    && pecl install swoole
COPY config/swoole.ini /usr/local/etc/php/conf.d/
RUN apk add --no-cache --no-progress --virtual .build_deps_php_amqp rabbitmq-c-dev \
    && apk add --no-cache --no-progress rabbitmq-c \
    && apk add --no-cache git autoconf automake gawk build-base \
    && pecl install amqp \
    && apk del .build_deps_php_amqp
# Copy configuration
COPY config/amqp.ini /usr/local/etc/php/conf.d/
ENV PHP_SIMDJSON_VERSION master
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    g++ \
    gcc \
    make \
    pkgconf \
    git \
    re2c
RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
  && git clone --branch ${PHP_SIMDJSON_VERSION} https://github.com/crazyxman/simdjson_php /tmp/simdjson \
        && cd /tmp/simdjson \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test
# Copy configuration
COPY config/simdjson.ini /usr/local/etc/php/conf.d/
RUN apk del .build-deps \
    && rm -rf /tmp/* \
    && rm -rf /app \
    && mkdir /app
# Possible values for ext-name:
# bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl
# json ldap mbstring mcrypt mssql mysql mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci
# pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap
# sockets spl standard sybase_ct sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip
COPY config/php7.ini /usr/local/etc/php/conf.d/
COPY config/fpm/php-fpm.conf /usr/local/etc/
COPY config/fpm/pool.d /usr/local/etc/pool.d
VOLUME ["/var/www"]
WORKDIR /var/www
#####################
# php-fpm-blackfire #
#####################
FROM php-fpm as php-fpm-blackfire
# blackfire HTTP (dedicated agent on blackfire:8707)
RUN set -xeo pipefail \
    && version=$(php -r "echo PHP_MAJOR_VERSION, PHP_MINOR_VERSION;") \
    && curl -sSL -D - -A "Docker" -o /tmp/blackfire-probe.tar.gz https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/${version} \
    && for file in /tmp/blackfire-*.tar.gz; do tar zxfp "${file}" -C /tmp; done \
    && for file in /tmp/blackfire-*.sha*; do echo "$(cat ${file})  ${file/.sha1/}"; done | sed 's/\.sha/.so/' | sha1sum -c - \
    && mv /tmp/blackfire-*.so "$(php -r "echo ini_get('extension_dir');")/blackfire.so" \
    && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > ${PHP_INI_DIR}/conf.d/blackfire.ini \
    && rm -rf /tmp/blackfire* \
    && php-fpm -m | grep "^blackfire$" > /dev/null
###################
# php-fpm-opcache #
###################
FROM php-fpm as php-fpm-opcache
RUN docker-php-ext-configure opcache --enable-opcache \
    && docker-php-ext-install opcache
# Copy configuration
COPY config/opcache.ini $PHP_INI_DIR/conf.d/
#####################
# php-fpm-xdebug #
#####################
FROM php-fpm as php-fpm-xdebug
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    g++ \
    gcc \
    make \
    pkgconf \
    re2c \
    linux-headers
RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    && pecl install xdebug \
    && apk del .build-deps
# Copy custom configuration
COPY config/xdebug.ini /usr/local/etc/php/conf.d/
############
# composer #
############
FROM php-fpm as composer-fpm
# Environmental Variables
ENV COMPOSER_HOME=/root/composer
ARG COMPOSER_VERSION=2.5.4
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN set -xe \
    # use own name or other previous .persistent-deps will be removed
    && apk add --no-cache --virtual .persistent-deps-composer \
        zlib-dev \
        libzip-dev \
        git \
        unzip \
        openssh-client \
    && docker-php-ext-install \
        zip \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version $COMPOSER_VERSION
# Set up the command arguments
CMD ["-"]
ENTRYPOINT ["composer", "--ansi"]
##############
# composer 1 #
##############
FROM php-fpm as composer-fpm-1x
# Environmental Variables
ENV COMPOSER_HOME=/root/composer
ARG COMPOSER_VERSION=1.10.26
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN set -xe \
    # use own name or other previous .persistent-deps will be removed
    && apk add --no-cache --virtual .persistent-deps-composer \
        zlib-dev \
        libzip-dev \
        git \
        unzip \
        openssh-client \
    && docker-php-ext-install \
        zip \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version $COMPOSER_VERSION \
    && composer global require hirak/prestissimo
# Set up the command arguments
CMD ["-"]
ENTRYPOINT ["composer", "--ansi"]
