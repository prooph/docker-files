# DO NOT MODIFY THIS AUTOGENERATED FILE
# Change it in m4 folder
ARG ALPINE_VERSION=3.16
ARG PHP_VERSION=8.3
########
# base #
########
FROM php:${PHP_VERSION}-zts-alpine${ALPINE_VERSION} as php-zts
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    cmake \
    file \
    g++ \
    gcc \
    libc-dev \
    pcre-dev \
    make \
    git \
    pkgconf \
    re2c \
    # for GD
    freetype-dev \
    libpng-dev  \
    libjpeg-turbo-dev \
    # for xslt
    libxslt-dev \
    # for intl extension
    icu-dev \
    openssl-dev \
    linux-headers
RUN apk add --no-cache --virtual .persistent-deps \
    # for intl extension
    icu-libs \
    # for mongodb
    libssl1.1 \
    # for postgres
    postgresql-dev \
    # for soap
    libxml2-dev \
    # for amqp
    libressl-dev \
    # for GD
    freetype \
    libpng \
    libjpeg-turbo \
    libxslt \
    # for mbstring
    oniguruma-dev \
    libgcrypt
RUN set -xe \
    # workaround for rabbitmq linking issue
    && ln -s /usr/lib /usr/local/lib64 \
    # hack to link libgcrypt
    && ln -s /usr/lib/libgcrypt.so.20 /usr/lib/libgcrypt.so \
    && ln -s /usr/lib/libgpg-error.so.0 /usr/lib/libgpg-error.so \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    # 7.4 changes https://github.com/php/php-src/blob/PHP-7.4/UPGRADING
    && docker-php-ext-configure gd \
        --enable-gd \
        --with-freetype=/usr/include/ \
        --with-jpeg=/usr/include/ \
    && docker-php-ext-configure bcmath --enable-bcmath \
    && docker-php-ext-configure intl --enable-intl \
    && docker-php-ext-configure pcntl --enable-pcntl \
    && docker-php-ext-configure mysqli --with-mysqli \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \
    && docker-php-ext-configure pdo_pgsql --with-pdo-pgsql \
    && docker-php-ext-configure mbstring --enable-mbstring \
    && docker-php-ext-configure soap --enable-soap \
    && docker-php-ext-install -j$(nproc) \
        gd \
        bcmath \
        intl \
        pcntl \
        mysqli \
        pdo_mysql \
        pdo_pgsql \
        mbstring \
        soap \
        xsl
# Copy configuration
COPY config/php7.ini /usr/local/etc/php/conf.d/
RUN set -xe \
    && pecl install mongodb
COPY config/mongodb.ini /usr/local/etc/php/conf.d/
ENV PHP_REDIS_VERSION 5.3.7
RUN git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \
        && cd /tmp/phpredis \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test
# Copy configuration
COPY config/redis.ini /usr/local/etc/php/conf.d/
# See https://github.com/protocolbuffers/protobuf/tree/main/php
RUN pecl install protobuf
# Copy configuration
COPY config/protobuf.ini /usr/local/etc/php/conf.d/
RUN set -xe \
    && pecl install swoole
COPY config/swoole.ini /usr/local/etc/php/conf.d/
RUN apk add --no-cache --no-progress --virtual .build_deps_php_amqp rabbitmq-c-dev \
    && apk add --no-cache --no-progress rabbitmq-c \
    && apk add --no-cache git autoconf automake gawk build-base \
    && pecl install amqp \
    && apk del .build_deps_php_amqp
# Copy configuration
COPY config/amqp.ini /usr/local/etc/php/conf.d/
ENV PHP_SIMDJSON_VERSION master
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    g++ \
    gcc \
    make \
    pkgconf \
    git \
    re2c
RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
  && git clone --branch ${PHP_SIMDJSON_VERSION} https://github.com/crazyxman/simdjson_php /tmp/simdjson \
        && cd /tmp/simdjson \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test
# Copy configuration
COPY config/simdjson.ini /usr/local/etc/php/conf.d/
RUN apk del .build-deps \
    && rm -rf /tmp/* \
    && rm -rf /app \
    && mkdir /app
COPY config/php-cli.ini /usr/local/etc/php/php.ini
VOLUME ["/app"]
WORKDIR /app
#####################
# php-zts-blackfire #
#####################
FROM php-zts as php-zts-blackfire
#include(`cli-blackfire.m4')
###################
# php-fpm-opcache #
###################
FROM php-zts as php-zts-opcache
RUN docker-php-ext-configure opcache --enable-opcache \
    && docker-php-ext-install opcache
# Copy configuration
COPY config/opcache.ini $PHP_INI_DIR/conf.d/
#####################
# php-zts-xdebug #
#####################
FROM php-zts as php-zts-xdebug
# for MAC users
ENV XDEBUG_HOST=172.17.0.1
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    g++ \
    gcc \
    make \
    pkgconf \
    re2c \
    linux-headers
RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    && pecl install xdebug \
    && apk del .build-deps
# Copy custom configuration
COPY config/xdebug-cli.ini /usr/local/etc/php/conf.d/
############
# composer #
############
FROM php-zts as composer-zts
# Environmental Variables
ENV COMPOSER_HOME=/root/composer
ARG COMPOSER_VERSION=2.5.4
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN set -xe \
    # use own name or other previous .persistent-deps will be removed
    && apk add --no-cache --virtual .persistent-deps-composer \
        zlib-dev \
        libzip-dev \
        git \
        unzip \
        openssh-client \
    && docker-php-ext-install \
        zip \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version $COMPOSER_VERSION
# Set up the command arguments
CMD ["-"]
ENTRYPOINT ["composer", "--ansi"]
##############
# composer 1 #
##############
FROM php-zts as composer-zts-1x
# Environmental Variables
ENV COMPOSER_HOME=/root/composer
ARG COMPOSER_VERSION=1.10.26
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN set -xe \
    # use own name or other previous .persistent-deps will be removed
    && apk add --no-cache --virtual .persistent-deps-composer \
        zlib-dev \
        libzip-dev \
        git \
        unzip \
        openssh-client \
    && docker-php-ext-install \
        zip \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version $COMPOSER_VERSION \
    && composer global require hirak/prestissimo
# Set up the command arguments
CMD ["-"]
ENTRYPOINT ["composer", "--ansi"]
