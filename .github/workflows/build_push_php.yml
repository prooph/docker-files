on:
  schedule:
    - cron: '0 0 * * 0,3'
  push:
    branches:
      - 'master'

name: "Build And Push PHP Docker Images"

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-and-push-docker:
    name: "Build And Push PHP Docker Images"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
        php-target:
          - "cli"
          - "fpm"
          - "zts"
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install Docker Composer 2.x"
        run: |
          curl -fL https://raw.githubusercontent.com/docker/compose-switch/master/install_on_linux.sh | sudo sh
          sudo  update-alternatives --display docker-compose
          docker -v
          docker-compose -v

      - name: "Build ${{ matrix.php-target }} ${{ matrix.php-version }}"
        working-directory: php
        env:
          PHP_VERSION: ${{ matrix.php-version }}
          PHP_TARGET: ${{ matrix.php-target }}
          DOCKER_REGISTRY: "ghcr.io/prooph/docker-files/"
        run: docker-compose build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Push PHP images to ghcr.io"
        working-directory: php
        env:
          PHP_VERSION: ${{ matrix.php-version }}
          PHP_TARGET: ${{ matrix.php-target }}
          DOCKER_REGISTRY: "ghcr.io/prooph/docker-files/"
        run: "docker-compose push"

      - name: "Push Composer images to ghcr.io"
        working-directory: php
        env:
          PHP_VERSION: ${{ matrix.php-version }}
          PHP_TARGET: ${{ matrix.php-target }}
          DOCKER_REGISTRY: "ghcr.io/prooph/docker-files/"
        if: ${{ matrix.php-target }} == 'cli'
        run: |
          docker tag ${DOCKER_REGISTRY}composer:${PHP_VERSION}-${PHP_TARGET} ${DOCKER_REGISTRY}composer:${PHP_VERSION}
          docker push ${DOCKER_REGISTRY}composer:${PHP_VERSION}

      - name: "Cleanup"
        run: rm /home/runner/.docker/config.json
